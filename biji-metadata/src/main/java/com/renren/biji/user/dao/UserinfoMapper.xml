<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.renren.biji.user.dao.UserinfoMapper">
  <resultMap id="BaseResultMap" type="com.renren.biji.user.entity.Userinfo">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="jobs" jdbcType="VARCHAR" property="jobs" />
    <result column="web_site" jdbcType="VARCHAR" property="webSite" />
    <result column="github" jdbcType="VARCHAR" property="github" />
    <result column="weibo" jdbcType="VARCHAR" property="weibo" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.renren.biji.user.entity.Userinfo">
    <result column="instructions" jdbcType="LONGVARCHAR" property="instructions" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, nick_name, jobs, web_site, github, weibo, location, signature
  </sql>
  <sql id="Blob_Column_List">
    instructions
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.renren.biji.user.entity.UserinfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.renren.biji.user.entity.UserinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_userinfo
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_userinfo
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.renren.biji.user.entity.UserinfoExample">
    delete from t_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.renren.biji.user.entity.Userinfo">
    insert into t_userinfo (uid, nick_name, jobs, 
      web_site, github, weibo, 
      location, signature, instructions
      )
    values (#{uid,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, #{jobs,jdbcType=VARCHAR}, 
      #{webSite,jdbcType=VARCHAR}, #{github,jdbcType=VARCHAR}, #{weibo,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, #{instructions,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.renren.biji.user.entity.Userinfo">
    insert into t_userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="jobs != null">
        jobs,
      </if>
      <if test="webSite != null">
        web_site,
      </if>
      <if test="github != null">
        github,
      </if>
      <if test="weibo != null">
        weibo,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="instructions != null">
        instructions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="jobs != null">
        #{jobs,jdbcType=VARCHAR},
      </if>
      <if test="webSite != null">
        #{webSite,jdbcType=VARCHAR},
      </if>
      <if test="github != null">
        #{github,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="instructions != null">
        #{instructions,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.renren.biji.user.entity.UserinfoExample" resultType="java.lang.Integer">
    select count(*) from t_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_userinfo
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobs != null">
        jobs = #{record.jobs,jdbcType=VARCHAR},
      </if>
      <if test="record.webSite != null">
        web_site = #{record.webSite,jdbcType=VARCHAR},
      </if>
      <if test="record.github != null">
        github = #{record.github,jdbcType=VARCHAR},
      </if>
      <if test="record.weibo != null">
        weibo = #{record.weibo,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.instructions != null">
        instructions = #{record.instructions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_userinfo
    set uid = #{record.uid,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      jobs = #{record.jobs,jdbcType=VARCHAR},
      web_site = #{record.webSite,jdbcType=VARCHAR},
      github = #{record.github,jdbcType=VARCHAR},
      weibo = #{record.weibo,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      instructions = #{record.instructions,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_userinfo
    set uid = #{record.uid,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      jobs = #{record.jobs,jdbcType=VARCHAR},
      web_site = #{record.webSite,jdbcType=VARCHAR},
      github = #{record.github,jdbcType=VARCHAR},
      weibo = #{record.weibo,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.renren.biji.user.entity.Userinfo">
    update t_userinfo
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="jobs != null">
        jobs = #{jobs,jdbcType=VARCHAR},
      </if>
      <if test="webSite != null">
        web_site = #{webSite,jdbcType=VARCHAR},
      </if>
      <if test="github != null">
        github = #{github,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="instructions != null">
        instructions = #{instructions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.renren.biji.user.entity.Userinfo">
    update t_userinfo
    set nick_name = #{nickName,jdbcType=VARCHAR},
      jobs = #{jobs,jdbcType=VARCHAR},
      web_site = #{webSite,jdbcType=VARCHAR},
      github = #{github,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      instructions = #{instructions,jdbcType=LONGVARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.renren.biji.user.entity.Userinfo">
    update t_userinfo
    set nick_name = #{nickName,jdbcType=VARCHAR},
      jobs = #{jobs,jdbcType=VARCHAR},
      web_site = #{webSite,jdbcType=VARCHAR},
      github = #{github,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>